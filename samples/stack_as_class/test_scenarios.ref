Push(1,)
Push(2,)
Pop(2,)
Pop(1,)
  0. Finished at step 4, no more actions enabled, reached accepting state
Push(1,)
Push(2,)
Pop(1,)
Pop(2,)
  1. Finished at step 4, no more actions enabled, reached accepting state
Push(1,)
Push(3,)
Pop(3,)
Pop(1,)
  2. Finished at step 4, no more actions enabled, reached accepting state
Pop(2,)
Pop(1,)
Push(1,)
Push(2,)
  3. Finished at step 4, no more actions enabled, reached accepting state
Test finished, completed 4 runs
Push(1,)
Push(2,)
Pop(2,)
Pop(1,)
  0. Finished at step 4, no more actions enabled, reached accepting state
Push(1,)
Push(2,)
  1. Finished at step 2, no more actions enabled, ended in non-accepting state
Push(1,)
  2. Finished at step 1, no more actions enabled, ended in non-accepting state
  3. Finished at step 0, no more actions enabled, ended in non-accepting state
Test finished, completed 4 runs
Push(1,)
Push(2,)
Pop(2,)
Pop(1,)
  0. Finished at step 4, no more actions enabled, reached accepting state
Push(1,)
Push(2,)
  1. Finished at step 2, no more actions enabled, ended in non-accepting state
Push(1,)
Push(3,)
  2. Finished at step 2, no more actions enabled, ended in non-accepting state
  3. Finished at step 0, no more actions enabled, ended in non-accepting state
Test finished, completed 4 runs
Push(1,)
Push(2,)
Pop(2,)
Pop(1,)
  0. Finished at step 4, no more actions enabled, reached accepting state
Push(1,)
Push(2,)
  1. Finished at step 2, no more actions enabled, ended in non-accepting state
Push(1,)
Push(3,)
Pop(3,)
Pop(1,)
  2. Finished at step 4, no more actions enabled, reached accepting state
  3. Finished at step 0, no more actions enabled, ended in non-accepting state
Test finished, completed 4 runs
Scenarios module with three runs, by itself

Scenarios module, compose with Stack model, last two runs not allowed

Scenarios, compose with Stack, Push is observable, get args from scenario

Scenarios, compose with Stack, Push and Pop are observable, get args from scenario

